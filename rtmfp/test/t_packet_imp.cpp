/**
 * ============================================================================
 * @file    t_packet_imp.cpp
 *
 * @brief   
 * @details 
 *
 * @version 1.0  
 * @date    2013-06-13 16:27:21
 *
 * @author  shizhijie, shizhijie@baofeng.com
 * ============================================================================
 */

#include <string.h>
#include "packet_imp.h"
#include "ihello_chunk_imp.h"
#include "rtmfp_protocol.h"

int main(int /*argc*/, char */*argv*/[])
{
#if 0
	get_chunk_type(NULL);
	get_chunk_length(NULL);
	get_chunk_capacity(static_cast<void *>(NULL));
	get_packet_len(NULL);
#endif

	static uint8_t packet[] = {
		0x0B, 0x06, 0xA0, 0x30, 0x00, 0x29, 0x18, 0x17,
		0x0A, 0x72, 0x74, 0x6D, 0x66, 0x70, 0x3A, 0x2F,
		0x2F, 0x31, 0x39, 0x32, 0x2E, 0x31, 0x36, 0x38,
		0x2E, 0x32, 0x30, 0x32, 0x2E, 0x39, 0x32, 0x04,
		0x83, 0x5E, 0xE7, 0x3E, 0x25, 0x81, 0xEE, 0x1C,
		0x49, 0x4D, 0x7F, 0x10, 0x66, 0xBA, 0xBD, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	};

	static uint8_t ihello[] = {
		0x30, 0x00, 0x29, 0x18, 0x17, 0x0A, 0x72, 0x74,
		0x6D, 0x66, 0x70, 0x3A, 0x2F, 0x2F, 0x31, 0x39,
		0x32, 0x2E, 0x31, 0x36, 0x38, 0x2E, 0x32, 0x30,
		0x32, 0x2E, 0x39, 0x32, 0x04, 0x83, 0x5E, 0xE7,
		0x3E, 0x25, 0x81, 0xEE, 0x1C, 0x49, 0x4D, 0x7F,
		0x10, 0x66, 0xBA, 0xBD, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF
	};
	hex_print(packet, sizeof(packet));	

	ihello_chunk_t *p_ihello_chunk = NULL;
	p_ihello_chunk = read_chunk_ihello(ihello, &p_ihello_chunk);
	ihello_print(p_ihello_chunk);

	packet_t *p_pkt = NULL;
	uint16_t timestamp = 0x06a0;
	p_pkt = const_cast<packet_t *>(set_packet(0x0B, timestamp, 0x00, p_ihello_chunk, &p_pkt));
	packet_print(p_pkt);
	free_chunk_ihello(p_ihello_chunk);
	free_packet(p_pkt);

	uint32_t pktlen = get_packet_len(p_pkt);
	p_pkt = const_cast<packet_t *>(read_packet(packet, &p_pkt));
	packet_print(p_pkt);
	pktlen = get_packet_len(p_pkt);
	uint8_t *pktdata = NULL;
	write_packet(p_pkt, &pktdata, pktlen);
	hex_print(pktdata, pktlen);
	delete[] pktdata; pktdata = NULL;
	
	return 0;
}
